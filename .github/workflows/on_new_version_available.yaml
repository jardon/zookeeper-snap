on:
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * 1'

jobs:
  get-versions-diff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: versions-diff
        run: |
          pip install -r requirements.txt
          echo "::set-output name=matrix::$(./check_updates.py | jq -R -s -c 'split("\n")[:-1]')"
          echo "SHORT_VERSIONS=$(python3 -c "from check_updates import print_short_versions; print_short_versions()"| jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
    outputs:
      matrix: ${{ steps.versions-diff.outputs.matrix }}
      short_versions: ${{ steps.versions-diff.outputs.SHORT_VERSIONS }}

  create-branch:
    runs-on: ubuntu-latest
    needs: get-versions-diff
    if: ${{ needs.get-versions-diff.outputs.matrix != '[]' }}
    strategy:
      matrix:
        versions: ${{ fromJson(needs.get-versions-diff.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: get short version
        id: get-short-version
        run: |
          pip install -r requirements.txt
          echo "SHORT_VERSION=$(python3 -c 'from check_updates import get_short_version; print(get_short_version("${{ matrix.versions }}"))')" >> $GITHUB_OUTPUT
      - uses: peterjgrainger/action-create-branch@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: ${{ steps.get-short-version.outputs.SHORT_VERSION }}/stable
          sha: '${{ github.event.pull_request.head.sha }}'
      - name: clone
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.get-short-version.outputs.SHORT_VERSION }}/stable
      - name: inject-version
        run: |
          sed -i "s:3.6.3:${{ matrix.versions }}:g" snap/snapcraft.yaml
          grep version snap/snapcraft.yaml
      - name: commit
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com
          git add snap/snapcraft.yaml
          git commit -m "Prepare release of version ${{ steps.get-short-version.outputs.SHORT_VERSION }}/stable"
      - name: push
        run: git push origin ${{ steps.get-short-version.outputs.SHORT_VERSION }}/stable

  publish:
    name: Publish Snap
    needs:
      - get-versions-diff
      - create-branch
    uses: ./.github/workflows/publish.yaml
    strategy:
      matrix:
        versions: ${{ fromJson(needs.get-versions-diff.outputs.short_versions) }}
    secrets: inherit
    with:
      channel: ${{ matrix.versions }}/stable

  # open-issue:
  #   runs-on: ubuntu-latest
  #   if: failure()
  #   needs:
  #     - create-branch
  #     - get-versions-diff
  #     - publish
  #   permissions:
  #     contents: read
  #     issues: write
  #   strategy:
  #     matrix:
  #       versions: ${{ fromJson(needs.get-versions-diff.outputs.short_versions) }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: JasonEtco/create-an-issue@v2
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         ISSUE_TITLE: ${{ matrix.versions }}
